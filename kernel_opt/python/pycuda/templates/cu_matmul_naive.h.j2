__global__ void cu_matmul_naive(const {{ T }} * a, const {{T}} * b, {{T}} * c)
{
    auto col = blockIdx.x * blockDim.x + threadIdx.x;
    auto row = blockIdx.y * blockDim.y + threadIdx.y;

    if (row < {{ C_ROWS }} && col < {{ C_COLS }})
    {
        c[row * {{ C_COLS }} + col] = 0;
        for(auto z=0; z!= {{ WIDTH }}; ++z)
        {
            c[row * {{ C_COLS }} + col] += a[row * {{ WIDTH }} + z] * b[z * {{ C_COLS }} + col];
        }
    }
}

